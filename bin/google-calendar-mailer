#!/usr/bin/env node
const GoogleCalendarMailer = require('../lib/google-calendar-mailer.js')

// If the 2nd parameter is defined, display it above the first parameter
function errorExitWithMessage (message) {
  console.error(`Error: ${message}\nPlease consult the README.md`)
  process.exit(1)
}

const cronMode = (process.argv[2] === '-c')
let taskFile = process.argv[cronMode ? 3 : 2]

if (!taskFile) {
  errorExitWithMessage(`
    Usage: google-calendar-mailer <taskfile>
           google-calendar-mailer -c <taskfile>

           -c: cron mode
               disables interactive access token setup
               exit code of 1 if access token is missing or invalid
  `)
}

taskFile = require('path').resolve(process.cwd(), taskFile)

try {
  taskFile = require(taskFile)
} catch (e) {
  errorExitWithMessage(`Unable to find or parse file: ${taskFile}`)
}

const gcm = new GoogleCalendarMailer(taskFile.settings, taskFile.tasks, cronMode)

try {
  gcm.initialize(taskFile.settings, taskFile.tasks, cronMode)
} catch (e) {
  gcm.errorExitWithMessage(`Unable to process configuration: ${e.message}`)
}

async function run () {
  try {
    await gcm.setUserTimezone()
    await gcm.runTasks()
  } catch (error) {
    errorExitWithMessage(error.message)
  }
}

run()
